@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Usuario</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h5></h5>
        </div>
        <hr />
    </div>

    @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.IdUsuario, new { @class = "form-control hidden" })
                @Html.TextBoxFor(model => model.IdUsuario, new { @class = "form-control hidden" })

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.UserName)
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserName)
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Nombre)
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @onkeypress = "return ValidarSoloLetras(event,'lblNombre')" })
                @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger", id = "lblNombre" })
                <label id="lblErrorNombre"> </label>

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ApellidoPaterno)
                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno", @onkeypress = "return ValidarSoloLetras(event, 'lblApellidoPaterno')" })
                @Html.ValidationMessageFor(model => model.ApellidoPaterno, null, new { @class = "text-danger", id = "lblApellidoPaterno" })

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ApellidoMaterno)
                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno", @onkeypress = "return ValidarSoloLetras(event, 'lblApellidoMaterno')" })
                @Html.ValidationMessageFor(model => model.ApellidoMaterno, null, new { @class = "text-danger", id = "lblApellidoMaterno" })

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtEmail", @onblur = "ValidarEmail(this.value, 'lblEmail')", placeholder = "ejemplo@ejem.com", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger", id = "lblEmail" })

                <label id="lblErrorEmail"></label>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtEmail2", @onblur = "MatchEmail()", placeholder = "Repetir correo", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger", id = "lblEmail" })

                <label id="lblErrorEmail"></label>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Contrasenia)
                @Html.TextBoxFor(model => model.Contrasenia, new { @class = "form-control", @id = "txtPassword", @onblur = "ValidarPassword(this.value, 'lblContrasenia'", placeholder = "Mayus, Minus, Num y Simbolos", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Contrasenia, null, new { @class = "text-danger", id = "lblContrasenia" })

                <label id="lblErrorContrasenia"></label>

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Contrasenia)
                @Html.TextBoxFor(model => model.Contrasenia, new { @class = "form-control", @id = "txtPassword2", @onblur = "MatchPassword()", @autocomplete = "off", placeholder = "Repetir contraseña" })
                @Html.ValidationMessageFor(model => model.Contrasenia, null, new { @class = "text-danger", id = "lblContrasenia" })
                <label id="lblErrorContrasenia"></label>

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Sexo)
                @Html.TextBoxFor(model => model.Sexo, new { @class = "form-control", @id = "txtSexo" })
                @Html.ValidationMessageFor(model => model.Sexo, null, new { @class = "text-danger", id = "lblSexo" })

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Telefono)
                @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "txtTelefono", @onkeypress = "return ValidarSoloNumeros(event)", placeholder = "Teléfono a 10 digitos" })
                @Html.ValidationMessageFor(model => model.Telefono, null, new { @class = "text-danger", id = "lblTelefono" })

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Celular)
                @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", @id = "txtCelular", @onkeypress = "return ValidarSoloNumeros(event)", placeholder = "Celular a 10 digitos" })
                @Html.ValidationMessageFor(model => model.Celular, null, new { @class = "text-danger", id = "lblCelular" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.FechaDeNacimiento)
                @Html.TextBoxFor(model => model.FechaDeNacimiento, new { @class = "form-control", @id = "txtFechaDeNacimiento", placeholder = "Día-Mes-Año con dígitos" })
                @Html.ValidationMessageFor(model => model.FechaDeNacimiento, null, new { @class = "text-danger", id = "lblFechaDeNacimiento" })

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.CURP)
                @Html.TextBoxFor(model => model.CURP, new { @class = "form-control", @id = "txtCURP" })
                @Html.ValidationMessageFor(model => model.CURP, null, new { @class = "text-danger", id = "lblCURP" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Rol.IdRol)
                @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Rols, "IdRol", "Nombre"), "Seleccione una opción", new { @class = "form-control", @id = "ddlRol" })
                @*@Html.TextBoxFor(model => model.Rol.IdRol, new { @class = "form-control" })*@
                <br />
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Direccion.Calle)
                @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Direccion.Calle, null, new { @class = "text-danger", id = "lblCalle" })

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Direccion.NumeroInterior)
                @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior, null, new { @class = "text-danger", id = "lblNumeroInterior" })

                <br />
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Direccion.NumeroExterior)
                @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior, null, new { @class = "text-danger", id = "lblNumeroExterior" })

            </div>
        </div>

        <div class="row">
            <div class="col-md-3">

                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona un País", new { @class = "form-control", @id = "ddlPais" })

            </div>

            <div class="col-md-3">
                @if (Model.Direccion.Colonia.Municipio.Estado.Estados != null)
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona un Estado", new { @class = "form-control", @id = "ddlEstado" })

                }
                else
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "IdEstado", "Nombre"), "Selecciona un Estado", htmlAttributes: new { @class = "form-control", @id = "ddlEstado" })

                }
            </div>
            <div class="col-md-3">
                @if (Model.Direccion.Colonia.Municipio.Municipios != null)
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona un Municipio", new { @class = "form-control", @id = "ddlMunicipio" })

                }
                else
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "IdMunicipio", "Nombre"), "Selecciona un Municipio", htmlAttributes: new { @class = "form-control", @id = "ddlMunicipio" })

                }
            </div>

            <div class="col-md-3">
                @if (Model.Direccion.Colonia.Colonias != null)
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una Colonia", new { @class = "form-control", @id = "ddlColonia" })

                }
                else
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "IdColonia", "Nombre"), "Selecciona una Colonia", htmlAttributes: new { @class = "form-control", @id = "ddlColonia" })

                }
            </div>
        </div>

        

        <div class="mb-3">
            @*//IMAGEN*@
            <div class="col-md-12">
                @Html.LabelFor(model => Model.Imagen)
                @Html.HiddenFor(model => Model.Imagen)
                <input type="file" id="fuImagen" onchange="imgPreview(event);" name="fuImagen" />
                @if (Model.Imagen == null)
                {
                    <img id="imgUsuario" src="~/images/imageDefault.png" style="width:200px; height:200px;" />
                }
                else
                {
                    <img id="imgUsuario" src="data:image/png;base64,@Convert.ToBase64String(Model.Imagen)" style="width:200px; height:200px;" />
                }
            </div>
        </div>

        <div class="row">
            <div class="col-md-1">
                <input type="submit" data-toggle="modal" class="btn btn-success" value="Guardar" />
            </div>
            <div class="col-md-1">
                @Html.ActionLink("Cancelar", "GetAll", "Usuario", new { @class = "btn btn-danger" })
                <br />
            </div>
        </div>

        // </div>
    }
</div>

<script type="text/javascript">

    function imgPreview(event) {
        var output = document.getElementById('imgUsuario');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src)
        }
    };
</script>

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlPais").change(function () {
            $("#ddlEstado").empty();
            $("#ddlMunicipio").empty();
            $("#ddlColonia").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("EstadoGetByIdPais")',
                dataType: 'json',
                data: { IdPais: $("#ddlPais").val() },
                success: function (estados) {

                    $("#ddlEstado").append('<option value="0">' + 'Selecciona un Estado' + '</option>');
                    $("#ddlMunicipio").append('<option value="0">' + 'Selecciona un Municipio' + '</option>');
                    $("#ddlColonia").append('<option value="0">' + 'Selecciona un Colonia' + '</option>');
                    $.each(estados, function (i , estados) {
                        $("#ddlEstado").append('<option value="'
                            + estados.IdEstado + '">'
                            + estados.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed. ' + ex);
                }
            });
        });
    });
</script>

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlEstado").change(function () {
            $("#ddlMunicipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("MunicipioGetEstado")',
                dataType: 'json',
                data: { IdEstado: $("#ddlEstado").val() },
                success: function (municipios) {

                    $("#ddlMunicipio").append('<option value="0">' + 'Selecciona un Municipio' + '</option>');
                    $.each(municipios, function (i , municipios) {
                        $("#ddlMunicipio").append('<option value="'
                            + municipios.IdMunicipio + '">'
                            + municipios.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed. ' + ex);
                }
            });
        });
    });
</script>

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        $("#ddlMunicipio").change(function () {
            $("#ddlColonia").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ColoniaGetByIdMunicipio")',
                dataType: 'json',
                data: { IdMunicipio: $("#ddlMunicipio").val() },
                success: function (colonias) {

                    $("#ddlColonia").append('<option value="0">' + 'Selecciona una Colonia' + '</option>');
                    $.each(colonias, function (i , colonias) {
                        $("#ddlColonia").append('<option value="'
                            + colonias.IdColonia + '">'
                            + colonias.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed. ' + ex);
                }
            });
        });
    });
</script>


<link rel="stylesheet" href="//apps.bdimg.com/libs/jqueryui/1.10.4/css/jquery-ui.min.css">
<script src="//apps.bdimg.com/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="//apps.bdimg.com/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
<link rel="stylesheet" href="jqueryui/style.css">
<script type="text/javascript">


    function ValidarSoloLetras(event, controlId) {
        var letra = event.key;
        var regexLetters = /^[A-Za-z]+$/g;

        if (!regexLetters.test(letra)) {
            $('#' + controlId).text("Solo puede ingresar letras");
            $('#' + controlId).css({ "color": "red" })
            return false;

        }
        else {
            $('#' + controlId).text("");
            return true;
        }
    }

    function ValidarSoloNumeros(event) {
        var numero = event.key;
        var regexNumbers = /^[0-9]*$/;

        if (regexNumbers.test(numero)) {
            $('#' + controlId).text("");
            return true;
        }
        else {
            $('#' + controlId).text("Solo puede ingresar números");
            $('#' + controlId).css({ "color": "red" })
            return false;
        }
    }

    function ValidarEmail(event, controlId)
    {

        //var regexEmail = /^[a-zA-Z0-9.-_]+@@[a-zA-Z0-9]+\.[a-z]$/;
        var regexEmail = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

        if (regexEmail.test(event))
        {
            $('#' + controlId).text("");
        }
        else
        {
            $('#' + controlId).text("Correo no valido");
            $('#' + controlId).css({ "color": "red" });
        }
    }

    function MatchEmail()
    {
        var email = document.getElementById('txtEmail');
        var email2 = document.getElementById('txtEmail2');

        if (email.value != email2.value)
        {

            $('#' + 'lblEmail' ).text("Los correos no coinciden");
            $('#' + 'lblEmail').css({ "color": "red" })

            email.style.borderColor = "red";
            email2.style.borderColor = "red";


        }
        else
        {
            email.style.borderColor = "green";
            email2.style.borderColor = "green";

            $('#lblEmail').text("");
        }
    }


    function ValidarPassword(event, controlId) {

        //var regexEmail = /^[a-zA-Z0-9.-_]+@@[a-zA-Z0-9]+\.[a-z]$/;

        var regexPass = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{8,}$/;

        if (regexPass.test(event)) {
            $('#' + controlId).text("");
        }
        else {
            $('#' + controlId).text("Debe contener al menos 8 caracteres, una mayúscula, una minúscula, un número y un caracter especial");
            $('#' + controlId).css({ "color": "red" });
        }
    }


    function MatchPassword()
    {
        pass = document.getElementById('txtPassword');
        pass2 = document.getElementById('txtPassword2');

        if (pass.value != pass2.value)
        {
            pass.style.borderColor = "red";
            pass2.style.borderColor = "red";
            $('#lblErrorContrasenia' + controlId).text("Las contraseñas no coinciden");
            $('#lblErrorContrasenia' + controlId).css({ "color": "red" });

            return false;
        }
        else
        {
            pass.style.borderColor = "green";
            pass2.style.borderColor = "green";
            $('#lblErrorContrasenia' + controlId.text(""));
        }
    }

</script>